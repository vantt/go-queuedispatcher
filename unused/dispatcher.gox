package dispatcher

// Dispatcher ..
type Dispatcher struct {
	balancer  *Balancer
	collector *TaskCollector
}

// NewDispatcher ...
func NewDispatcher(co *TaskCollector, b *Balancer) *Dispatcher {
	return &Dispatcher{
		balancer:  b,
		scheduler: sc,
		collector: co,
	}
}

// Start ...
func (dp *Dispatcher) Start(done chan bool, concurrent uint64) {
	chanTask := dp.collector.Start()
	dp.balancer.Start(chanTask, concurrent)
}

// https://gist.github.com/rushilgupta/228dfdf379121cb9426d5e90d34c5b96
